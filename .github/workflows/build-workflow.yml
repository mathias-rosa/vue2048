name: Build Workflow
on:
    workflow_dispatch:
        inputs:
            run_static_analysis:
                description: "Lancer l'analyse statique"
                required: false
                default: true
                type: boolean
            run_tests:
                description: "Lancer les tests"
                required: false
                type: boolean
                default: true
    push:
        branches:
            - main
        paths-ignore:
            - "docs/**"
    pull_request:
        paths-ignore:
            - "docs/**"
    schedule:
        - cron: "0 8 * * 1"

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20]

        steps:
            - uses: actions/checkout@v4
            - uses: pnpm/action-setup@v3
              with:
                  version: 8
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "pnpm"
            - name: Install dependencies
              run: pnpm install
            - name: Build
              run: pnpm build
            - name: Upload artefact on main
              if: github.ref == 'refs/heads/main'
              uses: actions/upload-artifact@v4
              with:
                  name: dist
                  path: dist
                  retention-days: 7
            - name: Upload Artifact
              if: github.ref != 'refs/heads/main'
              uses: actions/upload-artifact@v4
              with:
                  name: dist
                  path: dist
                  retention-days: 1
            - name: Static Analysis
              if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' && github.event.inputs.run_static_analysis == 'true'
              run: |
                  pnpm lint
                  pnpm type-check
            - name: Tests
              if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' && github.event.inputs.run_tests == 'true'
              run: pnpm test
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  body: |
                      A pushed tag triggered an automatic release.
                  draft: false
                  prerelease: false

    deploy-QA:
        needs: build
        if: github.event_name == 'workflow_dispatch'
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20]
        env:
            AZURE_TOKEN_QA_MR: ${{ secrets.AZURE_TOKEN_QA_MR }}
        steps:
            - uses: actions/checkout@v4
            - uses: pnpm/action-setup@v3
              with:
                  version: 8
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "pnpm"
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: dist
                  path: dist
            - name: Display structure of downloaded files
              run: ls ./dist
            - name: Install SWA CLI
              run: pnpm install -g @azure/static-web-apps-cli
            - name: Deploy to QA
              run: swa deploy -n stapp-vue-prod ./dist -d $AZURE_TOKEN_QA_MR

    deploy-PROD:
        needs: build
        if: github.event_name == 'workflow_dispatch'
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20]
        env:
            AZURE_TOKEN_PROD_MR: ${{ secrets.AZURE_TOKEN_PROD_MR }}
        steps:
            - uses: actions/checkout@v4
            - uses: pnpm/action-setup@v3
              with:
                  version: 8
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "pnpm"
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: dist
                  path: dist
            - name: Display structure of downloaded files
              run: ls ./dist
            - name: Install SWA CLI
              run: pnpm install -g @azure/static-web-apps-cli
            - name: Deploy to PROD
              run: swa deploy -n stapp-vue-prod ./dist -d $AZURE_TOKEN_PROD_MR
